{"version":3,"sources":["module.js","main.js","directives/location-picker-widget.js","controllers/location-picker-widget.js"],"names":["ng","window","angular","module","directive","restrict","replace","templateUrl","controller","controllerAs","scope","url","placeholder","minLength","noDataMessage","types","bufferInputMs","searchingText","value","link","element","attrs","ctrl","$scope","$timeout","this","valueChange","selected","originalObject","$emit","vm","remoteUrlFormatData","str","search","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GACA,aAKAC,OAAAC,QAFAC,OAAA,sCAAA,CAAA,qBAJA,GCAA,SAAAH,GACA,aAKAC,OAAAC,QAFAC,OAAA,sCAAA,CAAA,qBAJA,GCAA,SAAAH,GACA,aA8BAC,OAAAC,QA3BAC,OAAA,uCACAC,UAAA,oBAAA,CACA,WAEA,MAAA,CACAC,SAAA,KACAC,SAAA,EACAC,YAAA,6EACAC,WAAA,qEACAC,aAAA,iBACAC,MAAA,CACAC,IAAA,IACAC,YAAA,KACAC,UAAA,KACAC,cAAA,KACAC,MAAA,KACAC,cAAA,KACAC,cAAA,KACAC,MAAA,KAEAC,KAAA,SAAAT,EAAAU,EAAAC,EAAAC,SAxBA,GAiCA,SAAAtB,GCjCA,aAgCAC,OAAAC,QA9BAC,OAAA,uCAAAK,WACA,qEACA,CACA,SACA,WACA,SAAAe,EAAAC,GACAC,KAAAd,IAAAY,EAAAZ,KAAA,GACAc,KAAAb,YAAAW,EAAAX,aAAA,GACAa,KAAAZ,UAAAU,EAAAV,WAAA,EACAY,KAAAX,cAAAS,EAAAT,eAAA,0BACAW,KAAAV,MAAAQ,EAAAR,OAAA,oBACAU,KAAAT,cAAAO,EAAAP,eAAA,IACAS,KAAAR,cAAAM,EAAAN,eAAA,iBACAQ,KAAAC,YAAA,SAAAC,GAEAJ,EAAAL,MADAS,EACAA,EAAAC,eAEA,KAEAL,EAAAM,MAAA,cAAAN,EAAAL,QAGA,IAAAY,EAAAL,KAEAK,EAAAC,oBAAA,SAAAC,GACA,MAAA,CAAAC,OAAAD,EAAAjB,MAAAe,EAAAf,WDMA,GCCAb,QAAAC,OAAA,uCAAA+B,IAAA,CAAA,iBAAA,SAAAC,GAAAA,EAAAC,IAAA,kEAAA,69CACAD,EAAAC,IAAA,6EAAA","file":"akit.component.location-picker-widget.min.js","sourcesContent":["(function (ng) {\n    'use strict';\n\n    ng\n        .module('akit.component.locationPickerWidget', ['angucomplete-ie8']);\n\n})(window.angular);\n","(function (ng) {\n    'use strict';\n\n    ng\n        .module('akit.component.locationPickerWidget', ['angucomplete-ie8']);\n\n})(window.angular);\n","(function (ng) {\n    'use strict';\n\n    ng\n        .module('akit.component.locationPickerWidget')\n        .directive('auiLocationPicker', [\n            function () {\n\n                return {\n                    restrict: 'AE',\n                    replace: true,\n                    templateUrl: '/assets/location-picker-widget/views/directives/location-picker-widget.htm',\n                    controller: 'akit.component.locationPickerWidget.locationPickerWidgetController',\n                    controllerAs: 'locationPicker',\n                    scope: {\n                        url: '@',\n                        placeholder: '@?',\n                        minLength: '@?',\n                        noDataMessage: '@?',\n                        types: '@?',\n                        bufferInputMs: '@?',\n                        searchingText: '@?',\n                        value: '='\n                    },\n                    link: function (scope, element, attrs, ctrl) {\n                    }\n                };\n\n            }\n        ]);\n\n// @ts-ignore\n})(window.angular);\n","(function (ng) {\n    \"use strict\";\n\n    ng.module(\"akit.component.locationPickerWidget\").controller(\n        \"akit.component.locationPickerWidget.locationPickerWidgetController\",\n        [\n            \"$scope\",\n            \"$timeout\",\n            function ($scope, $timeout) {\n                /** The URL to the BFF. */\n                this.url = $scope.url || \"\";\n                /** what to show in the input field when blank */\n                this.placeholder = $scope.placeholder || \"\";\n                /** minimum number of characters typed before search is triggered */\n                this.minLength = $scope.minLength || 2;\n                /** message to show when there are no hits */\n                this.noDataMessage = $scope.noDataMessage || \"Geen resultaat gevonden\";\n                /** the type of values to search for, comma-separated list of \"street\", \"number\" or \"poi\" */\n                this.types = $scope.types || \"street,number,poi\";\n                /** how long to buffer keystrokes before requesting search results */\n                this.bufferInputMs = $scope.bufferInputMs || 500;\n                /** searching text */\n                this.searchingText = $scope.searchingText || \"Aan het zoeken\";\n                /** the event fired when the value changes */\n                this.valueChange = function (selected) {\n                    if (selected) {\n                        $scope.value = selected.originalObject;\n                    } else {\n                        $scope.value = null;\n                    }\n                    $scope.$emit(\"valueChange\", $scope.value);\n                };\n\n                var vm = this;\n\n                vm.remoteUrlFormatData = function (str) {\n                    return {search: str, types: vm.types };\n                };\n            }\n        ]\n    );\n// @ts-ignore\n})(window.angular);\n"],"sourceRoot":"dist/js"}